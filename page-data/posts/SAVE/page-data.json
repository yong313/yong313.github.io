{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/SAVE",
    "result": {"pageContext":{"currentCategory":"SAVE","categories":["All","TIL","SAVE","뚝딱만들기","React","알고리즘연습"],"edges":[{"node":{"id":"24d1992e-9236-5629-aa08-3015227f0d4c","excerpt":"Api 호출하여 데이터 받고 가공하여 Chart 구현하기 최근 1경기부터 50경기까지 1~8위의 데이터를 라인 차트로 구현하여 유저에게 보여줘야 한다. 라인 차트를 사용하기 위해 여러 가지 라이브러리들을 검색해 봤다.\nRecharts와 Chartjs를 먼저 알게 되었는데 Chartjs가 공식 문서에 커스텀 하는 부분이 상세하게 나와있고 가볍다는 장점이 있어 Chartjs를 사용하여 구현하기로 했다. 처음 사용하는 라이브러리이고 주어진 시간은 짧기 때문에 공식 문서가 친절한 Chartjs에 마음이 감ㅋㅋ 0227_gif_v1.gif view 작업을 진행하며 구현 사항을 체크했다. Api를 호출하여 유저의 최근 1경기부터 50경기까지 1~8위의 기록을 라인차트로 구현 우측 상단 지난 200경기의 평균 순위, 최근 50경기의 평균 순위 표시 1. Api를 호출 유저의 1경기부터 50경기 1~8위의 기록을 라인차트로 구현 Chart.js의 공식 문서를 먼저 살펴보았다. 그 뒤 여러 블로그…","fields":{"slug":"/SAVE/0227_save/0227_save/"},"frontmatter":{"categories":"SAVE","title":"Error Handling - 02-27","date":"February 27, 2022"}},"next":{"fields":{"slug":"/TIL/22_02_26/"}},"previous":{"fields":{"slug":"/TIL/22_02_27/"}}},{"node":{"id":"19d18592-1b8b-5fd3-b966-a595cee11168","excerpt":"로컬 스토리지를 활용해 간다한 댓글 남기기 구현할 기능은 간단한 댓글 남기기이다. 프로젝트 스코프가 작다고 판단하여 팀원들과 회의 끝에 Redux를 사용하지않고 진행하기로 함. 로컬스토리지를 사용하여 구현하기로 마음먹었다 0226_gif_v1.gif view 작업을 진행하며 구현 사항을 체크했다. 로컬 스토리지에 닉네임, 댓글 담고 남기기 버튼 클릭 시 댓글 보여주기 우측 상단 추가된 댓글 만큼 숫자 count 하기 우측에서 좌측으로 들어오는 에니메이션 추가 새로 추가된 댓글에 스크롤이 고정되어 추가된 댓글 먼저 보여주기 1. 로컬 스토리지에 닉네임, 댓글 저장 우선 유저가 작성하는 input의 닉네임과 댓글을 useRef를 사용하여 값을 받은 뒤, saveComment 함수인에서 commentArry 배열에 yourName, 과 yourCommet에 담아 로컬 스토리지에 setItem을 사용하여 저장한다. 댓글이 추가될 때마다 로컬 스토리지에 배열로 추가 저장하기 위해 스프레드 …","fields":{"slug":"/SAVE/0226_save/0226_save/"},"frontmatter":{"categories":"SAVE","title":"Error Handling - 02-26","date":"February 26, 2022"}},"next":{"fields":{"slug":"/TIL/22_02_25/"}},"previous":{"fields":{"slug":"/TIL/22_02_26/"}}},{"node":{"id":"1ff075a9-696f-5c28-af65-be055b39d50f","excerpt":"DOM DOM은 Document Object Model의 약자이며, HTML 요소를 Object(JavaScript Object)처럼 조작(Manipulation)할 수 있는 Model이다. MDN 에서 말하는 DOM의 정의는 다음과 같다. 문서 객체 모델(The Document Object Model, DOM) 은 HTML, XML 문서의 프로그래밍 interface이다. 여기서 XML이란 EXtensible Markup Language의 약자이다. 간단하게 설명하면, 텍스트 기반 컴퓨터 자료 구조인 SGML을 HTML처럼 간략화, 표준화하면서 HTML과 호환될 수 있도록 만들어진 마크업 언어이다. 다시 돌아와서, DOM이란 마크업 언어를 구조화해 웹페이지를 프로그래밍 언어를 통해 변경할 수 있게 하는 API인 셈이다. DOM으로 HTML 조작하기 HTML 엘리먼트를 만들고(CREATE), 조회하고(READ), 갱신하고(UPDATE), 삭제하는(DELETE) 하는 방법을 학습해보…","fields":{"slug":"/SAVE/0222_save/0222_save/"},"frontmatter":{"categories":"SAVE","title":"DOM에 대하여","date":"February 22, 2022"}},"next":{"fields":{"slug":"/SAVE/0221_save/"}},"previous":{"fields":{"slug":"/TIL/22_02_22/"}}},{"node":{"id":"288841f0-3f3e-5d1c-80e0-09eef075b5a8","excerpt":"1. 일반적으로 CSS 태그를 태그 사이에 위치시키고, JS 태그를 태그가 끝나기 직전에 위치시키는 이유가 무엇인가요? myAnswer 🍕 CSS  태그를  태그 사이에 위치시키는 이유는 css 태그를  뒷부분에 사용할경우, HTML을 렌더링 한 후 CSS를 렌더링하기 시작하기 때문에, 랜더링이 총 두번 진행된다. 두번의 렌더링으로 낭비가 심하고 사용자에게 UX적인 측면에서 좋지 않다. JS  태그를  태그가 끝나기 직전에 위치시키는 이유는 브라우저는 태그를 만나면 HTML 파싱을 잠시 멈추고 를 다운로드하고 실행한다. 이 경우 사용자에게 화면이 보여지기까지 시간이 늦어지기 때문에 , HTML요소를 모두 파싱한뒤에 자바스크립트 파일을 다운로드하고 실행할 수 있도록  태그 맨 뒤에 태그를 두는 것이 좋다. 2. script / script async / script defer 태그들의 차이점은 무엇인가요? myAnswer 🍕 3개의 스크립트 태그는 해당 스크립트를 다운로드받은 뒤 실…","fields":{"slug":"/SAVE/0221_save/"},"frontmatter":{"categories":"SAVE","title":"면접대비2 - 26_Q&A","date":"February 21, 2022"}},"next":{"fields":{"slug":"/TIL/22_02_21/"}},"previous":{"fields":{"slug":"/SAVE/0222_save/0222_save/"}}},{"node":{"id":"4251c935-ea33-57dc-b998-11e07ea12e47","excerpt":"1. https란 무엇인지 아는 만큼 설명해주세요. myAnswer 🍕 https는  의 약자로 http가 서버와 정보를 텍스트로 주고받기 때문에 원치 않는 데이터 유출이 일어날 수 있는 보안 취약점을 해결하기 위한 프로토콜이  장점으로는 가 있습니다.단점으로는 가 느려질 수 있습니다. 2. http와 https의 차이점은? myAnswer 🍕  HTTPS는 기본 골격이나 사용 목적 등은 HTTP와 거의 동일하지만, 입니다. HTTPS를 사용하면 서버와 클라이언트 사이의 모든 통신 내용이 암호화됩니다. 3. 프로세스 생성 과정에 대해 설명해주세요. myAnswer 🍕 먼저 프로세스란 프로그램이 구동될 때 주 메모리에 적재되며 메모리 상에서 실행되는 작업의 단위를 프로세스라고 합니다. 보통은 작업(Task)라고도 부릅니다(작업 관리자). 쉽게 말해 실행중에 있는 프로그램이라고 할 수 있습니다. 프로세스의 생성과정은 다음과 같습니다. 실행파일 클릭 -> 실행을 위한 메모리 할당 -> …","fields":{"slug":"/SAVE/0202_save/"},"frontmatter":{"categories":"SAVE","title":"면접대비1 - 50_Q&A","date":"February 02, 2022"}},"next":{"fields":{"slug":"/React/useState란/"}},"previous":{"fields":{"slug":"/뚝딱만들기/Modal/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}